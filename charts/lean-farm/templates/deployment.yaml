apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lean-farm.fullname" . }}
  labels:
    {{- include "lean-farm.labels" . | nindent 4 }}
  annotations:
    {{- if .Values.deployment.annotations }}
    {{- toYaml .Values.deployment.annotations | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.hpa.minReplicas | default 10 }}
  selector:
    matchLabels:
      {{- include "lean-farm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "lean-farm.selectorLabels" . | nindent 8 }}
      annotations:
        {{- if .Values.pod.annotations }}
        {{- toYaml .Values.pod.annotations | nindent 8 }}
        {{- end }}
        # Security annotations
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        container.seccomp.security.alpha.kubernetes.io/lean-farm: runtime/default
    spec:
      # Security: Use gVisor runtime for syscall isolation
      {{- if .Values.security.runtimeClass }}
      runtimeClassName: {{ .Values.security.runtimeClass }}
      {{- end }}
      
      # Security: Run as non-root user
      {{- if .Values.security.runAsNonRoot }}
      securityContext:
        runAsNonRoot: {{ .Values.security.runAsNonRoot }}
        runAsUser: {{ .Values.security.runAsUser | default 1000 }}
        runAsGroup: {{ .Values.security.runAsGroup | default 1000 }}
        fsGroup: {{ .Values.security.fsGroup | default 1000 }}
        {{- if .Values.security.seccompProfile }}
        seccompProfile:
          {{- toYaml .Values.security.seccompProfile | nindent 10 }}
        {{- end }}
      {{- end }}
      
      # Node affinity for optimal placement
      {{- if .Values.nodeAffinity }}
      affinity:
        nodeAffinity:
          {{- toYaml .Values.nodeAffinity | nindent 10 }}
      {{- end }}
      
      # Tolerations for dedicated nodes
      {{- if .Values.tolerations }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
      
      # Pod disruption budget for high availability
      {{- if .Values.pdb.enabled }}
      terminationGracePeriodSeconds: 30
      {{- end }}
      
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if .Values.image.digest }}
        imagePullPolicy: Always
        {{- end }}
        
        # Security context for container
        securityContext:
          runAsNonRoot: true
          runAsUser: {{ .Values.security.runAsUser | default 1000 }}
          runAsGroup: {{ .Values.security.runAsGroup | default 1000 }}
          readOnlyRootFilesystem: {{ .Values.security.readOnlyRootFilesystem | default true }}
          allowPrivilegeEscalation: {{ .Values.security.allowPrivilegeEscalation | default false }}
          privileged: {{ .Values.security.privileged | default false }}
          {{- if .Values.security.capabilities }}
          capabilities:
            {{- toYaml .Values.security.capabilities | nindent 12 }}
          {{- end }}
        
        # Resource limits and requests
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        
        # Environment variables
        env:
        - name: LEAN_VERSION
          value: {{ .Values.env.LEAN_VERSION | quote }}
        - name: LAKE_BUILD_TIMEOUT
          value: {{ .Values.env.LAKE_BUILD_TIMEOUT | quote }}
        - name: LEAN_FARM_SECURE
          value: {{ .Values.env.LEAN_FARM_SECURE | quote }}
        - name: LEAN_FARM_ISOLATED
          value: {{ .Values.env.LEAN_FARM_ISOLATED | quote }}
        - name: LEAN_FARM_CPU_LIMIT
          value: {{ .Values.env.LEAN_FARM_CPU_LIMIT | quote }}
        - name: LEAN_FARM_MEMORY_LIMIT
          value: {{ .Values.env.LEAN_FARM_MEMORY_LIMIT | quote }}
        - name: LEAN_FARM_NETWORK_POLICY
          value: {{ .Values.env.LEAN_FARM_NETWORK_POLICY | quote }}
        
        # S3 credentials (if using IAM roles)
        {{- if .Values.storage.s3.accessKeyId }}
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: {{ include "lean-farm.fullname" . }}-s3-secret
              key: access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "lean-farm.fullname" . }}-s3-secret
              key: secret-access-key
        {{- end }}
        
        # MinIO credentials
        {{- if .Values.storage.minio.accessKey }}
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "lean-farm.fullname" . }}-minio-secret
              key: access-key
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "lean-farm.fullname" . }}-minio-secret
              key: secret-key
        {{- end }}
        
        # Health checks
        {{- if .Values.monitoring.livenessProbe }}
        livenessProbe:
          {{- toYaml .Values.monitoring.livenessProbe | nindent 10 }}
        {{- end }}
        
        {{- if .Values.monitoring.readinessProbe }}
        readinessProbe:
          {{- toYaml .Values.monitoring.readinessProbe | nindent 10 }}
        {{- end }}
        
        # Ports
        ports:
        - name: http
          containerPort: {{ .Values.network.service.port }}
          protocol: TCP
        {{- if .Values.monitoring.metrics.enabled }}
        - name: metrics
          containerPort: {{ .Values.monitoring.metrics.port }}
          protocol: TCP
        {{- end }}
        
        # Volume mounts for S3 and MinIO
        volumeMounts:
        - name: s3-config
          mountPath: /etc/lean-farm/s3
          readOnly: true
        - name: minio-config
          mountPath: /etc/lean-farm/minio
          readOnly: true
        - name: proof-artifacts
          mountPath: /var/lean-farm/artifacts
        - name: lean-cache
          mountPath: /var/lean-farm/cache
        - name: tmp
          mountPath: /tmp
          readOnly: false
        
        # Command and args
        command: ["/usr/local/bin/lean-farm"]
        args:
        - "--config=/etc/lean-farm/config.yaml"
        - "--log-level={{ .Values.logging.level }}"
        - "--log-format={{ .Values.logging.format }}"
        {{- if .Values.monitoring.metrics.enabled }}
        - "--metrics-port={{ .Values.monitoring.metrics.port }}"
        - "--metrics-path={{ .Values.monitoring.metrics.path }}"
        {{- end }}
      
      # Volumes
      volumes:
      - name: s3-config
        configMap:
          name: {{ include "lean-farm.fullname" . }}-s3-config
      - name: minio-config
        configMap:
          name: {{ include "lean-farm.fullname" . }}-minio-config
      - name: proof-artifacts
        emptyDir: {}
      - name: lean-cache
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      
      # Image pull secrets
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }} 